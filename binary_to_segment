module binary_to_segment(
    input [3:0] binary_in,
    output reg [6:0] seven_out
    );

always @(binary_in)
begin
	case(binary_in)								
		4'd0: seven_out =7'b0000001;		//0	
		4'd1: seven_out =7'b1001111;		//1	
		4'd2: seven_out =7'b0010010;		//2	
		4'd3: seven_out =7'b0000110;		//3	
		4'd4: seven_out =7'b1001100;		//4
		4'd5: seven_out =7'b0100100;		//5
		4'd6: seven_out =7'b0100000;		//6
		4'd7: seven_out =7'b0001111;		//7
		4'd8: seven_out =7'b0000000;		//8
		4'd9: seven_out =7'b0000100;		//9
		4'd10: seven_out =7'b0001000;		//A
		4'd11: seven_out =7'b1100000;		//b
		4'd12: seven_out =7'b0110001;		//C
		4'd13: seven_out =7'b1000010;		//d
		4'd14: seven_out =7'b0110000;		//E
		4'd15: seven_out =7'b0111000;		//F

		default: seven_out = 7'h1;
	endcase
end


endmodule
